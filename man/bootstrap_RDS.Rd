% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_functions.R
\name{bootstrap_RDS}
\alias{bootstrap_RDS}
\title{Variance estimation with bootstrap chain and tree methods}
\usage{
bootstrap_RDS(
  RESPONDENT_ID,
  SEED_ID,
  SEED,
  RECRUITER_ID,
  data.cov,
  type,
  n.times,
  return_data = F
)
}
\arguments{
\item{RESPONDENT_ID}{character or numeric vector; A variable indicating respondent ID}

\item{SEED_ID}{character or numeric vector; A variable indicating seed ID}

\item{SEED}{character or numeric vector; a variable indicating whether a particular respondent is seed or not}

\item{RECRUITER_ID}{character or numeric vector; A variable indicating recruiter ID}

\item{data.cov}{vector, matrix or data frame; Variable(s) of interest that will be used in the analysis}

\item{type}{character; One of the six types of bootstrap methods, please see the vignette for a more detailed information}

\item{n.times}{scalar; How many bootstrap resamples should be taken}

\item{return_data}{logical; By default return_data=F returns respondent ID and bootstrap iterations. If return_data TRUE, then the output will include variable(s) specified in data.cov}
}
\value{
When return_data=F returns a data frame consistiting of the following elements:
\item {RESPONDENT_ID}{character vector; A variable indicating respondent ID}
\item {boot_n}{character vector; A indicator variable for each bootstrap sample}
}
\description{
Variance estimation with bootstrap chain and tree methods
}
\examples{
data('RDStoydata')

# Preprocess data with RDSdata function
rds_data <- RDSdata(data = RDStoydata,unique_id = "ID",
redeemed_coupon = "CouponR",
issued_coupon = c("Coupon1",
                 "Coupon2",
                 "Coupon3"),
               degree = "Degree",
               result = c('Age','Sex'))


# Run bootstrap_RDS with rds_data
results = bootstrap_RDS(RESPONDENT_ID = rds_data$ID, SEED_ID = rds_data$S_ID,
SEED = rds_data$SEED, RECRUITER_ID = rds_data$R_CP,
data.cov = rds_data[,c('Age', 'Sex')], type = 'boot_chain_one', n.times = 100,
return_data = T)

}
